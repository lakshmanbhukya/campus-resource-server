name: Campus Resource CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run tests
        run: npm test

  docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/campus-resource-server:latest

  notify:
    runs-on: ubuntu-latest
    needs: [test, docker]
    if: always()  # ensures notification runs even on failure
    
    steps:
      - name: Send Discord Notification
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"❌ Build failed for $GITHUB_REPOSITORY at commit $GITHUB_SHA\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
      - name: Send Success Notification
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"✅ Build succeeded for $GITHUB_REPOSITORY\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
